class Employee:
    def __init__(self, first, last, pay):
        self.first = first
        self.last = last
        self.pay = pay
        self.email = first + '.' + last + '@company.com'

emp_1 = Employee("ibrahim", "ahmethan", 120000)
emp_2 = Employee("ahmethan", "ibrahim", 250000)

print(emp_1.email)

print(emp_1)
print(emp_2)

emp_1.first = "ibo"
emp_1.last = "ahmethan"
emp_1.email = "ahmethan.ibo@gmail.com"
emp_1.pay = 120000

print(emp_1.email)
print(emp_1.first)

////////////////////////////////////////////////////////////////////////////////

class Dog:

    def __init__(self, name, age):
        self.name = name
        self.age = age


    def add_one(self, x):
        return x + 1

    def bark(self):# method
        return "bark"

    def get_name(self):
        return self.name

d1 = Dog("boncuk", 4)
d2 = Dog("ayibogan", 6)
# d1.bark()

print(d1.name, d1.age)
print(d2.name, d2.age)


print(d1.add_one(5))
# print(type(d1.add_one(5)))

print(d1.bark()) ## int
print(d2.bark())
# print(type(d1.bark())) ## str

print(d1.get_name())
/////////////////////////////////////////////////////////////////

class Student:
    def __init__(self, name, age, grade):
        self.name = name
        self.age = age
        self.grade = grade # 0 - 100

    def get_grade(self):
        return self.grade

class Course:
    def __init__(self, name, max_students):
        self.name = name
        self.max_students = max_students
        self.students = []

    def add_student(self, student):
        if len(self.students) < self.max_students:
            self.students.append(student)
            return True
        return False

    def get_average_grade(self):
        value = 0
        for student in self.students:
            value += student.get_grade()  ## c1.grade or c1.get_grade()

        return value / len(self.students)

s1 = Student("ibo", 27, 95)
s2 = Student("sue", 25, 90)
s3 = Student("apo", 32, 80)

course = Course("Science", 2)
course.add_student(s1)
course.add_student(s2)
print(course.add_student(s3))
print(course.get_average_grade())

////////////////////////////////////////////////////////////////////////////////////////////


class Pet:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    def show(self):
        print(f"I am {self.name} and I am {self.age} years old")

    def speak(self):
        print("I do not know what I say")


class Cat(Pet):

    def __init__(self, name, age, color):
        super().__init__(name,age)
        self.color = color

    def speak(self):
        print("Meow")

    def show(self):
        print(f"I am {self.name} and I am {self.age} years old and I am {self.color}")


class Dog(Pet):
    def speak(self):
        print("Bark")


p = Pet("ibo", 27)
p.speak()

c = Cat("caw", 41, "blue")
c.show()
c.speak()

c1 = Cat("Bill", 34, "Brown")
c1.show()

d = Dog("ayibogan", 46)
d.show()
d.speak()



